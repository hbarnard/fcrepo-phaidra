package org.fcrepo.server.management;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.7
 * 2015-01-15T12:26:34.322+01:00
 * Generated source version: 2.7.7
 * 
 */
@WebServiceClient(name = "Fedora-API-M-MTOM-Service", 
                  wsdlLocation = "file:/home/barnarh9/fcrepo-3.8.0-SNAPSHOT/fcrepo-common/../resources/wsdl/Fedora-API-M-MTOM.wsdl",
                  targetNamespace = "http://fedora-commons.org/2011/07/definitions/types/") 
public class FedoraAPIMMTOMService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://fedora-commons.org/2011/07/definitions/types/", "Fedora-API-M-MTOM-Service");
    public final static QName FedoraAPIMMTOMPortSOAPHTTP = new QName("http://fedora-commons.org/2011/07/definitions/types/", "Fedora-API-M-MTOM-Port-SOAPHTTP");
    public final static QName FedoraAPIMMTOMPortSOAPHTTPS = new QName("http://fedora-commons.org/2011/07/definitions/types/", "Fedora-API-M-MTOM-Port-SOAPHTTPS");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/barnarh9/fcrepo-3.8.0-SNAPSHOT/fcrepo-common/../resources/wsdl/Fedora-API-M-MTOM.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(FedoraAPIMMTOMService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/home/barnarh9/fcrepo-3.8.0-SNAPSHOT/fcrepo-common/../resources/wsdl/Fedora-API-M-MTOM.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public FedoraAPIMMTOMService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FedoraAPIMMTOMService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FedoraAPIMMTOMService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns FedoraAPIMMTOM
     */
    @WebEndpoint(name = "Fedora-API-M-MTOM-Port-SOAPHTTP")
    public FedoraAPIMMTOM getFedoraAPIMMTOMPortSOAPHTTP() {
        return super.getPort(FedoraAPIMMTOMPortSOAPHTTP, FedoraAPIMMTOM.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FedoraAPIMMTOM
     */
    @WebEndpoint(name = "Fedora-API-M-MTOM-Port-SOAPHTTP")
    public FedoraAPIMMTOM getFedoraAPIMMTOMPortSOAPHTTP(WebServiceFeature... features) {
        return super.getPort(FedoraAPIMMTOMPortSOAPHTTP, FedoraAPIMMTOM.class, features);
    }
    /**
     *
     * @return
     *     returns FedoraAPIMMTOM
     */
    @WebEndpoint(name = "Fedora-API-M-MTOM-Port-SOAPHTTPS")
    public FedoraAPIMMTOM getFedoraAPIMMTOMPortSOAPHTTPS() {
        return super.getPort(FedoraAPIMMTOMPortSOAPHTTPS, FedoraAPIMMTOM.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FedoraAPIMMTOM
     */
    @WebEndpoint(name = "Fedora-API-M-MTOM-Port-SOAPHTTPS")
    public FedoraAPIMMTOM getFedoraAPIMMTOMPortSOAPHTTPS(WebServiceFeature... features) {
        return super.getPort(FedoraAPIMMTOMPortSOAPHTTPS, FedoraAPIMMTOM.class, features);
    }

}
